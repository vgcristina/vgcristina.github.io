---
import { isSkill } from '@/types/cv';
import type { Skill, Publication } from '@/types/cv';
import { highlightAuthor } from '@/lib/utils'

interface Props {
	elements: (Skill | Publication)[]
}

const { elements } = Astro.props
---
<ul class='space-y-8'>
  {elements.map((element, index) => (
    <li class='group'>
      { isSkill(element)
        ?
        <h3 class='text-lg font-bold mb-2'>{element.title}</h3>
        <p>{element.description}</p>
        :
      <a
        href={element.link as string}
        class='block hover:text-accent transition-colors duration-200'
        target='_blank'
      >
        <h3 class='text-lg font-bold mb-2'>{element.title}</h3>
      </a>
      // <p class='text-base mb-2'>
      //   <span class='font-medium'>Authors:</span>{' '}
      //   <span
      //     set:html={highlightAuthor(element.authors as string)}
      //   />
      // </p>
      <p class='text-sm mb-3'>
        <span class='italic'>{element.journal}</span> â€¢{' '}
        {element.time}
      </p>
      <p>{element.abstract}</p>
    }

    {!isSkill(element) && element.images && element.images.length > 0 && (
  <div class="mt-4 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
    {
      element.images.map((src: string, i: number) => (
        <img src={src} alt={`Captura ${i + 1}`} class="rounded shadow-md" />
      ))
    }
  </div>
)}

    {/* Uncomment this line to add a small border bottom for each element
    {index !== elements.length -1 && <hr class="mt-6 border-primary/40" />}  */}
    </li>
  ))}
</ul>
